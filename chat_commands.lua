
minetest.register_privilege("mg_villages", { description = "allows to list and teleport to villages generated by the mg mapgen", give_to_singleplayer = false});


--[[

              local village_id = tostring( village.vx )..':'..tostring( village.vz );
                -- the village data is saved only once per village - and not whenever part of the village is generated
                if( not( mg.mg_all_villages[ village_id ])) then

                        -- count how many villages we already have and assign each village a uniq number
                        local count = 1;
                        for _,v in pairs( mg.mg_all_villages ) do
                                count = count + 1;
                        end
                        village.nr = count;
                        mg.mg_all_villages[ village_id ] = minetest.deserialize( minetest.serialize( village ));

                        print("Village No. "..tostring( count ).." of type \'"..tostring( village.village_type ).."\' of size "..tostring( village.vs ).." spawned at: x = "..village.vx..", z = "..village.vz)
                        mg.save_data(); -- store mg.mg_all_villages on disk
                end
        end
end
:w!



minetest.register_chatcommand( 'villages', {
	description = "Shows a list of all known villages.",
	privs = {},
	func = function(name, param)
		return mg.list_villages_formspec( minetest.get_player_by_name( name ), "mg:village_list", {});
        end
});
--]]
minetest.register_chatcommand( 'visit', {
        description = "Shows a list of all known villages.",
	params = "<village number>",
        privs = {},
        func = function(name, param)


		if( not( minetest.check_player_privs( name, {mg_villages=true}))) then
			minetest.chat_send_player( name, "You need the 'mg_villages' priv in order to teleport to villages using this command.");
			return;
		end

		if( not( param ) or param == "" ) then
			minetest.chat_send_player( name, "Which village do you want to visit? Please provide the village number!");
			return;
		end

		local nr = tonumber( param );
		for id, v in pairs( mg.mg_all_villages ) do
			-- we have found the village
			if( v and v.nr == nr ) then

-- TODO: print village name here (once they got one...)
				minetest.chat_send_player( name, "Initiating transfer to village no. "..tostring( v.nr )..", called "..( tostring( id ))..".");
				local player =  minetest.get_player_by_name( name );
				player:moveto( { x=v.vx, y=(v.vh+1), z=v.vz }, false);
				return;
			end
		end
		-- no village found
		minetest.chat_send_player( name, "There is no village with the number "..tostring( param ).." (yet?).");
        end
});
